$OpenBSD$
--- src/drv_imap.c.orig	Wed Jul  3 16:53:47 2013
+++ src/drv_imap.c	Wed Jul  3 17:04:53 2013
@@ -1257,8 +1257,6 @@ imap_open_store( store_conf_t *conf, store_t *oldctx )
 	imap_store_t *ctx = (imap_store_t *)oldctx;
 	imap_t *imap;
 	char *arg, *rsp;
-	struct hostent *he;
-	struct sockaddr_in addr;
 	int s, a[2], preauth;
 #ifdef HAVE_LIBSSL
 	int use_ssl;
@@ -1307,32 +1305,63 @@ imap_open_store( store_conf_t *conf, store_t *oldctx )
 
 		info( "ok\n" );
 	} else {
-		memset( &addr, 0, sizeof(addr) );
-		addr.sin_port = srvc->port ? htons( srvc->port ) :
+		char ntop[NI_MAXHOST], strport[NI_MAXSERV];
+		int attempt;
+		int connection_attempts = 5;
+		int gaierr;
+		struct addrinfo hints, *res, *ai;
+
+		memset( &hints, 0, sizeof(hints));
+		hints.ai_family = PF_UNSPEC;
+		hints.ai_socktype = SOCK_STREAM;
+		snprintf(strport, sizeof strport, "%u", srvc->port ? srvc->port :
 #ifdef HAVE_LIBSSL
-		                srvc->use_imaps ? htons( 993 ) :
+		    srvc->use_imaps ? 993 : 
 #endif
-		                htons( 143 );
-		addr.sin_family = AF_INET;
-
+			143 );
 		info( "Resolving %s... ", srvc->host );
-		he = gethostbyname( srvc->host );
-		if (!he) {
-			perror( "gethostbyname" );
+
+		if (gaierr = getaddrinfo(srvc->host, strport, &hints, &res)) {
+			perror( "getaddrinfo" );
 			goto bail;
 		}
 		info( "ok\n" );
 
-		addr.sin_addr.s_addr = *((int *) he->h_addr_list[0]);
+		for (attempt = 0; attempt < connection_attempts; attempt++) {
+			if (attempt > 0) {
+				/* Sleep a moment before retrying. */
+				sleep(1);
+			}
 
-		s = socket( PF_INET, SOCK_STREAM, 0 );
+			for (ai = res; ai; ai = ai->ai_next) {
+				if (ai->ai_family != AF_INET && ai->ai_family != AF_INET6)
+					continue;
 
-		info( "Connecting to %s:%hu... ", inet_ntoa( addr.sin_addr ), ntohs( addr.sin_port ) );
-		if (connect( s, (struct sockaddr *)&addr, sizeof(addr) )) {
-			close( s );
-			perror( "connect" );
-			goto bail;
+				if (getnameinfo(ai->ai_addr, ai->ai_addrlen, ntop, sizeof(ntop), strport,
+				    sizeof(strport), NI_NUMERICHOST|NI_NUMERICSERV) != 0) {
+					perror("getnameinfo");
+					continue;
+				}
+				s = socket( ai->ai_family, ai->ai_socktype, 0 );
+				if (s < 0)
+					continue;
+
+				info( "Connecting to %s:%s... ", ntop, strport );
+				if (connect( s, ai->ai_addr, ai->ai_addrlen) < 0) {
+					close( s );
+					s = -1;
+					info( "failed\n" );
+					perror( "connect" );
+					continue;
+				} else {
+					break;
+				}
+			}
+			if (s != -1)	
+				break;
 		}
+		if (s == -1)
+			goto bail;
 		info( "ok\n" );
 
 		imap->buf.sock.fd = s;
