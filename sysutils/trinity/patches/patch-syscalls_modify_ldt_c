$OpenBSD$
--- syscalls/modify_ldt.c.orig	Sat Mar  2 18:05:44 2013
+++ syscalls/modify_ldt.c	Sat Mar  2 18:12:34 2013
@@ -10,19 +10,24 @@
 #include <stdlib.h>
 #include <sys/types.h>
 #define __ASSEMBLY__ 1
+#ifdef __LINUX__
 #include <asm/ldt.h>
+#endif
 
 #define ALLOCSIZE LDT_ENTRIES * LDT_ENTRY_SIZE
 
 static void sanitise_modify_ldt(int childno)
 {
+/*
 	void *ldt;
 	//struct user_desc *desc;
 
 	switch (shm->a1[childno]) {
 	case 0:
+*/
 		/* read the ldt into the memory pointed to by ptr.
 		   The number of bytes read is the smaller of bytecount and the actual size of the ldt. */
+/*
 		ldt = malloc(ALLOCSIZE);
 		if (ldt == NULL)
 			return;
@@ -30,6 +35,7 @@ static void sanitise_modify_ldt(int childno)
 		break;
 
 	case 1:
+*/
 		/* modify one ldt entry.
 		 * ptr points to a user_desc structure
 		 * bytecount must equal the size of this structure. */
@@ -45,10 +51,12 @@ static void sanitise_modify_ldt(int childno)
                unsigned int  seg_not_present:1;
                unsigned int  useable:1;
 	*/
-		break;
+
+/*		break;
 	default:
 		break;
 	}
+*/
 
 	//FIXME: We leak 'ldt' here. Need to deallocate post-syscall.
 }
