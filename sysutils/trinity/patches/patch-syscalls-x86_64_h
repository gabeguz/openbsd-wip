$OpenBSD$
--- syscalls-x86_64.h.orig	Sat Mar  2 22:16:10 2013
+++ syscalls-x86_64.h	Sat Mar  2 22:20:21 2013
@@ -18,14 +18,14 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_newlstat },
 	{ .entry = &syscall_poll },
 	{ .entry = &syscall_lseek },
-	{ .entry = &syscall_mmap },
+/*	{ .entry = &syscall_mmap },*/
 	{ .entry = &syscall_mprotect },
 	{ .entry = &syscall_munmap },
 	{ .entry = &syscall_brk },
 	{ .entry = &syscall_rt_sigaction },
 	{ .entry = &syscall_rt_sigprocmask },
 	{ .entry = &syscall_rt_sigreturn },
-	{ .entry = &syscall_ioctl },
+/*	{ .entry = &syscall_ioctl },*/
 	{ .entry = &syscall_pread64 },
 	{ .entry = &syscall_pwrite64 },
 	{ .entry = &syscall_readv },
@@ -34,10 +34,10 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_pipe },
 	{ .entry = &syscall_select },
 	{ .entry = &syscall_sched_yield },
-	{ .entry = &syscall_mremap },
+/*	{ .entry = &syscall_mremap },*/
 	{ .entry = &syscall_msync },
 	{ .entry = &syscall_mincore },
-	{ .entry = &syscall_madvise },
+/*	{ .entry = &syscall_madvise }, */
 	{ .entry = &syscall_shmget },
 	{ .entry = &syscall_shmctl },
 	{ .entry = &syscall_shmat },
@@ -63,9 +63,9 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_getsockname },
 	{ .entry = &syscall_getpeername },
 	{ .entry = &syscall_socketpair },
-	{ .entry = &syscall_setsockopt },
+/*	{ .entry = &syscall_setsockopt },*/
 	{ .entry = &syscall_getsockopt },
-	{ .entry = &syscall_clone },
+/*	{ .entry = &syscall_clone },*/
 	{ .entry = &syscall_fork },
 	{ .entry = &syscall_vfork },
 	{ .entry = &syscall_execve },
@@ -80,7 +80,7 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_msgget },
 	{ .entry = &syscall_msgsnd },
 	{ .entry = &syscall_msgrcv },
-	{ .entry = &syscall_msgctl },
+/*	{ .entry = &syscall_msgctl },*/
 	{ .entry = &syscall_fcntl },
 	{ .entry = &syscall_flock },
 	{ .entry = &syscall_fsync },
@@ -166,8 +166,8 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_modify_ldt },
 	{ .entry = &syscall_pivot_root },
 	{ .entry = &syscall_sysctl },
-	{ .entry = &syscall_prctl },
-	{ .entry = &syscall_arch_prctl },
+/*	{ .entry = &syscall_prctl },*/
+/*	{ .entry = &syscall_arch_prctl },*/
 	{ .entry = &syscall_adjtimex },
 	{ .entry = &syscall_setrlimit },
 	{ .entry = &syscall_chroot },
@@ -197,7 +197,7 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_ni_syscall },	/* obsolete "security" syscall */
 	{ .entry = &syscall_gettid },
 	{ .entry = &syscall_readahead },
-	{ .entry = &syscall_setxattr },
+/*	{ .entry = &syscall_setxattr },
 	{ .entry = &syscall_lsetxattr },
 	{ .entry = &syscall_fsetxattr },
 	{ .entry = &syscall_getxattr },
@@ -208,10 +208,10 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_flistxattr },
 	{ .entry = &syscall_removexattr },
 	{ .entry = &syscall_lremovexattr },
-	{ .entry = &syscall_fremovexattr },
+	{ .entry = &syscall_fremovexattr },*/
 	{ .entry = &syscall_tkill },
 	{ .entry = &syscall_time },
-	{ .entry = &syscall_futex },
+/*	{ .entry = &syscall_futex }, */
 	{ .entry = &syscall_sched_setaffinity },
 	{ .entry = &syscall_sched_getaffinity },
 	{ .entry = &syscall_ni_syscall },	/* obsolete "set_thread_area" syscall */
@@ -222,10 +222,10 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_io_cancel },
 	{ .entry = &syscall_ni_syscall },	/* obsolete "get_thread_area" syscall */
 	{ .entry = &syscall_lookup_dcookie },
-	{ .entry = &syscall_epoll_create },
+/*	{ .entry = &syscall_epoll_create },*/
 	{ .entry = &syscall_ni_syscall },	/* obsolete "epoll_ctl_old" syscall */
 	{ .entry = &syscall_ni_syscall },	/* obsolete "epoll_wait_old" syscall */
-	{ .entry = &syscall_remap_file_pages },
+/*	{ .entry = &syscall_remap_file_pages }, */
 	{ .entry = &syscall_getdents64 },
 	{ .entry = &syscall_set_tid_address },
 	{ .entry = &syscall_restart_syscall },
@@ -239,14 +239,14 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_clock_settime },
 	{ .entry = &syscall_clock_gettime },
 	{ .entry = &syscall_clock_getres },
-	{ .entry = &syscall_clock_nanosleep },
+/*	{ .entry = &syscall_clock_nanosleep },*/
 	{ .entry = &syscall_exit_group },
-	{ .entry = &syscall_epoll_wait },
-	{ .entry = &syscall_epoll_ctl },
+/*	{ .entry = &syscall_epoll_wait },
+	{ .entry = &syscall_epoll_ctl },*/
 	{ .entry = &syscall_tgkill },
 	{ .entry = &syscall_utimes },
 	{ .entry = &syscall_ni_syscall },	/* obsolete "vserver" syscall */
-	{ .entry = &syscall_mbind },
+/*	{ .entry = &syscall_mbind }, */
 	{ .entry = &syscall_set_mempolicy },
 	{ .entry = &syscall_get_mempolicy },
 	{ .entry = &syscall_mq_open },
@@ -259,7 +259,7 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_waitid },
 	{ .entry = &syscall_add_key },
 	{ .entry = &syscall_request_key },
-	{ .entry = &syscall_keyctl },
+/*	{ .entry = &syscall_keyctl },*/
 	{ .entry = &syscall_ioprio_set },
 	{ .entry = &syscall_ioprio_get },
 	{ .entry = &syscall_inotify_init },
@@ -281,47 +281,48 @@ struct syscalltable syscalls_x86_64[] = {
 	{ .entry = &syscall_faccessat },
 	{ .entry = &syscall_pselect6 },
 	{ .entry = &syscall_ppoll },
-	{ .entry = &syscall_unshare },
-	{ .entry = &syscall_set_robust_list },
-	{ .entry = &syscall_get_robust_list },
+/*	{ .entry = &syscall_unshare }, */
+/*	{ .entry = &syscall_set_robust_list },
+	{ .entry = &syscall_get_robust_list },*/
 	{ .entry = &syscall_splice },
 	{ .entry = &syscall_tee },
-	{ .entry = &syscall_sync_file_range },
-	{ .entry = &syscall_vmsplice },
+/*	{ .entry = &syscall_sync_file_range },*/
+/*	{ .entry = &syscall_vmsplice },*/
 	{ .entry = &syscall_move_pages },
 	{ .entry = &syscall_utimensat },
-	{ .entry = &syscall_epoll_pwait },
+/*	{ .entry = &syscall_epoll_pwait },*/
 	{ .entry = &syscall_signalfd },
-	{ .entry = &syscall_timerfd_create },
+/*	{ .entry = &syscall_timerfd_create }, */
 	{ .entry = &syscall_eventfd },
 	{ .entry = &syscall_fallocate },
-	{ .entry = &syscall_timerfd_settime },
+/*	{ .entry = &syscall_timerfd_settime },
 	{ .entry = &syscall_timerfd_gettime },
+*/
 	{ .entry = &syscall_accept4 },
 	{ .entry = &syscall_signalfd4 },
 	{ .entry = &syscall_eventfd2 },
-	{ .entry = &syscall_epoll_create1 },
-	{ .entry = &syscall_dup3 },
-	{ .entry = &syscall_pipe2 },
+/*	{ .entry = &syscall_epoll_create1 }, */
+/*	{ .entry = &syscall_dup3 },*/
+/*	{ .entry = &syscall_pipe2 },*/
 	{ .entry = &syscall_inotify_init1 },
 	{ .entry = &syscall_preadv },
 	{ .entry = &syscall_pwritev },
 	{ .entry = &syscall_rt_tgsigqueueinfo },
-	{ .entry = &syscall_perf_event_open },
-	{ .entry = &syscall_recvmmsg },
+/*	{ .entry = &syscall_perf_event_open },*/
+/*	{ .entry = &syscall_recvmmsg },*/
 	{ .entry = &syscall_fanotify_init },
 	{ .entry = &syscall_fanotify_mark },
 	{ .entry = &syscall_prlimit64 },
-	{ .entry = &syscall_name_to_handle_at },
-	{ .entry = &syscall_open_by_handle_at },
+/*	{ .entry = &syscall_name_to_handle_at },*/
+/*	{ .entry = &syscall_open_by_handle_at },*/
 	{ .entry = &syscall_clock_adjtime },
 	{ .entry = &syscall_syncfs },
-	{ .entry = &syscall_sendmmsg },
+/*	{ .entry = &syscall_sendmmsg },*/
 	{ .entry = &syscall_setns },
 	{ .entry = &syscall_getcpu },
 	{ .entry = &syscall_process_vm_readv },
 	{ .entry = &syscall_process_vm_writev },
-	{ .entry = &syscall_kcmp },
+/*	{ .entry = &syscall_kcmp }, */
 	{ .entry = &syscall_finit_module },
 };
 
