$OpenBSD$
--- syscalls/ptrace.c.orig	Sat Mar  2 20:51:16 2013
+++ syscalls/ptrace.c	Sat Mar  2 20:59:29 2013
@@ -2,12 +2,16 @@
  * SYSCALL_DEFINE4(ptrace, long, request, long, pid, long, addr, long, data)
  */
 #include <stdlib.h>
+#ifdef __LINUX__
 #include <linux/ptrace.h>
+#endif
 
 #include "trinity.h"
 #include "sanitise.h"
 #include "shm.h"
+#ifdef __LINUX__
 #include "compat.h"
+#endif
 
 
 static void sanitise_ptrace(int childno)
@@ -36,12 +40,56 @@ struct syscall syscall_ptrace = {
 	.arg1type = ARG_OP,
 	.arg1list = {
 		.num = 23,
-		.values = { PTRACE_TRACEME, PTRACE_PEEKTEXT, PTRACE_PEEKDATA, PTRACE_PEEKUSR,
-				PTRACE_POKETEXT, PTRACE_POKEDATA, PTRACE_POKEUSR, PTRACE_GETREGS,
-				PTRACE_GETFPREGS, PTRACE_GETSIGINFO, PTRACE_SETREGS, PTRACE_SETFPREGS,
-				PTRACE_SETSIGINFO, PTRACE_SETOPTIONS, PTRACE_GETEVENTMSG, PTRACE_CONT,
-				PTRACE_SYSCALL, PTRACE_SINGLESTEP, PTRACE_SYSEMU, PTRACE_SYSEMU_SINGLESTEP,
-				PTRACE_KILL, PTRACE_ATTACH, PTRACE_DETACH },
+		.values = {
+#ifdef __LINUX__
+				PTRACE_TRACEME,
+				PTRACE_PEEKTEXT,
+				PTRACE_PEEKDATA,
+				PTRACE_PEEKUSR,
+				PTRACE_POKETEXT,
+				PTRACE_POKEDATA,
+				PTRACE_POKEUSR,
+				PTRACE_GETREGS,
+				PTRACE_GETFPREGS,
+				PTRACE_GETSIGINFO,
+				PTRACE_SETREGS,
+				PTRACE_SETFPREGS,
+				PTRACE_SETSIGINFO,
+				PTRACE_SETOPTIONS,
+				PTRACE_GETEVENTMSG,
+				PTRACE_CONT,
+				PTRACE_SYSCALL,
+				PTRACE_SINGLESTEP,
+				PTRACE_SYSEMU,
+				PTRACE_SYSEMU_SINGLESTEP,
+				PTRACE_KILL,
+				PTRACE_ATTACH,
+				PTRACE_DETACH
+#endif
+#ifdef OpenBSD
+				PT_TRACE_ME,
+				PT_READ_I,
+				PT_READ_D,
+				PT_WRITE_I,
+				PT_WRITE_D,
+				PT_CONTINUE,
+				PT_KILL,
+				PT_ATTACH,
+				PT_DETACH,
+				PT_IO,
+				PT_SET_EVENT_MASK,
+				PT_GET_EVENT_MASK,
+				PT_GET_PROCESS_STATE,
+				PT_GETREGS,
+				PT_SETREGS,
+				PT_STEP,
+				PT_GETFPREGS,
+				PT_SETFPREGS,
+				PT_GETXMMREGS,
+				PT_SETXMMREGS,
+				PT_WCOOKIE
+#endif
+		},
 	},
 	.arg2name = "pid",
 	.arg3name = "addr",
