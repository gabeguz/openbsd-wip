$OpenBSD$
--- src/system/utility/FileUtility.cpp.orig	Thu May 12 21:46:19 2011
+++ src/system/utility/FileUtility.cpp	Thu Sep 19 12:34:05 2013
@@ -19,8 +19,9 @@ std::vector<std::string> FileUtility::getFilesFromDir(
 	boost::filesystem::directory_iterator dir_it(dir);
 
 	while (dir_it != boost::filesystem::directory_iterator()) {
-		if (boost::filesystem::is_regular_file(*dir_it))
-			files.push_back(dir_it->filename());
+		if (boost::filesystem::is_regular_file(*dir_it)) {
+			files.push_back(dir_it->path().filename().string());
+		}
 		++dir_it;
 	}
 	return files;
@@ -32,8 +33,8 @@ std::vector<std::string> FileUtility::getSubDirsFromDi
 
 	while (dir_it != boost::filesystem::directory_iterator()) {
 		if (boost::filesystem::is_directory(*dir_it))
-			if (dir_it->path().filename()[0] != '.')
-				subDirs.push_back(dir_it->path().filename());
+			if (dir_it->path().filename().string()[0] != '.')
+				subDirs.push_back(dir_it->path().filename().string());
 		++dir_it;
 	}
 	return subDirs;
@@ -45,7 +46,7 @@ unsigned int FileUtility::getSubDirsCountFromDir(boost
 
 	while (dir_it != boost::filesystem::directory_iterator()) {
 		if (boost::filesystem::is_directory(*dir_it))
-			if (dir_it->path().filename()[0] != '.')
+			if (dir_it->path().filename().string()[0] != '.')
 				++count;
 		++dir_it;
 	}
@@ -65,7 +66,7 @@ FileUtility::FileUtility(char *argPath) {
 	m_resPath = m_appPath;
 	m_usrPath = m_resPath;
 #endif //_WIN32
-#if defined linux || defined __FreeBSD__
+#if defined linux || defined __FreeBSD__ || defined __OpenBSD__
 #ifndef INSTALL_PREFIX
 #define INSTALL_PREFIX "/usr/local";
 #endif //INSTALL_PREFIX
