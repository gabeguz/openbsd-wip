$OpenBSD$
--- indra/llcommon/llstring.h.orig	Fri Feb  9 23:49:20 2007
+++ indra/llcommon/llstring.h	Sun Feb 11 22:12:16 2007
@@ -37,7 +37,7 @@
 #include <stdlib.h>
 #include <errno.h>
 #include <math.h>
-#if LL_LINUX
+#if LL_LINUX || defined(__OpenBSD__)
 #include <wctype.h>
 #include <wchar.h>
 #endif
@@ -51,7 +51,7 @@ class LLUUID;
 class LLColor4;
 class LLColor4U;
 
-#if (LL_DARWIN || (LL_LINUX && __GNUC__ > 2))
+#if (LL_DARWIN || (LL_LINUX && __GNUC__ > 2)) || defined(__OpenBSD__)
 // Template specialization of char_traits for U16s. Only necessary on Mac for now (exists on Windows, unused/broken on Linux/gcc2.95)
 namespace std
 {
@@ -202,7 +202,7 @@ public:
 	LLStringBase(const T* s, size_type n);
 	LLStringBase(const T* s, size_type pos, size_type n );
 	
-#if LL_LINUX
+#if LL_LINUX || defined(__OpenBSD__)
 	void clear() { assign(null); }
 	
 	LLStringBase<T>& assign(const T* s);
@@ -691,7 +691,7 @@ LLStringBase<T>::LLStringBase(const T* s
 	}
 }
 
-#if LL_LINUX
+#if LL_LINUX || defined(__OpenBSD__)
 template<class T> 
 LLStringBase<T>& LLStringBase<T>::assign(const T* s)
 {
@@ -1065,7 +1065,7 @@ BOOL LLStringBase<T>::isHead( const std:
 template<class T> 
 BOOL LLStringBase<T>::read(std::basic_string<T>& string, const char* filename)	 /*Flawfinder: ignore*/
 {
-#ifdef LL_LINUX
+#if defined(LL_LINUX)
     printf("STUBBED: LLStringBase<T>::read at %s:%d\n", __FILE__, __LINE__);
 #else
 	llifstream ifs(filename, llifstream::binary);
