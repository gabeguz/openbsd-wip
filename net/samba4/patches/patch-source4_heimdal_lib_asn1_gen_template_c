$OpenBSD$
--- source4/heimdal/lib/asn1/gen_template.c.orig	Sat May 18 16:10:46 2013
+++ source4/heimdal/lib/asn1/gen_template.c	Sat May 18 16:18:20 2013
@@ -571,6 +571,7 @@ template_members(struct templatehead *temp, const char
 	    count++;
 	}
 
+        /* XXX _SAMBA4? */
 	fprintf(f, "static const struct asn1_template asn1_%s_%s[] = {\n", basetype, bname);
 	fprintf(f, "/* 0 */ { 0%s, sizeof(%s), ((void *)%lu) },\n",
 		rfc1510_bitstring ? "|A1_HBF_RFC1510" : "",
@@ -582,6 +583,7 @@ template_members(struct templatehead *temp, const char
 	}
 	fprintf(f, "};\n");
 
+        /* XXX _SAMBA4? */
 	add_line(temp, "{ A1_OP_BMEMBER, %s, asn1_%s_%s }", poffset, basetype, bname);
 
 	free(bname);
@@ -775,11 +777,11 @@ gen_extern_stubs(FILE *f, const char *name)
 {
     fprintf(f,
 	    "static const struct asn1_type_func asn1_extern_%s = {\n"
-	    "\t(asn1_type_encode)encode_%s,\n"
-	    "\t(asn1_type_decode)decode_%s,\n"
-	    "\t(asn1_type_length)length_%s,\n"
-	    "\t(asn1_type_copy)copy_%s,\n"
-	    "\t(asn1_type_release)free_%s,\n"
+	    "\t(asn1_type_encode)encode_%s_SAMBA4,\n"
+	    "\t(asn1_type_decode)decode_%s_SAMBA4,\n"
+	    "\t(asn1_type_length)length_%s_SAMBA4,\n"
+	    "\t(asn1_type_copy)copy_%s_SAMBA4,\n"
+	    "\t(asn1_type_release)free_%s_SAMBA4,\n"
 	    "\tsizeof(%s)\n"
 	    "};\n",
 	    name, name, name, name,
@@ -860,7 +862,7 @@ generate_template(const Symbol *s)
     fprintf(f,
 	    "\n"
 	    "int\n"
-	    "decode_%s(const unsigned char *p, size_t len, %s *data, size_t *size)\n"
+	    "decode_%s_SAMBA4(const unsigned char *p, size_t len, %s *data, size_t *size)\n"
 	    "{\n"
 	    "    return _asn1_decode_top(asn1_%s, 0|%s, p, len, data, size);\n"
 	    "}\n"
@@ -873,7 +875,7 @@ generate_template(const Symbol *s)
     fprintf(f,
 	    "\n"
 	    "int\n"
-	    "encode_%s(unsigned char *p, size_t len, const %s *data, size_t *size)\n"
+	    "encode_%s_SAMBA4(unsigned char *p, size_t len, const %s *data, size_t *size)\n"
 	    "{\n"
 	    "    return _asn1_encode(asn1_%s, p, len, data, size);\n"
 	    "}\n"
@@ -885,7 +887,7 @@ generate_template(const Symbol *s)
     fprintf(f,
 	    "\n"
 	    "size_t\n"
-	    "length_%s(const %s *data)\n"
+	    "length_%s_SAMBA4(const %s *data)\n"
 	    "{\n"
 	    "    return _asn1_length(asn1_%s, data);\n"
 	    "}\n"
@@ -898,7 +900,7 @@ generate_template(const Symbol *s)
     fprintf(f,
 	    "\n"
 	    "void\n"
-	    "free_%s(%s *data)\n"
+	    "free_%s_SAMBA4(%s *data)\n"
 	    "{\n"
 	    "    _asn1_free(asn1_%s, data);\n"
 	    "}\n"
@@ -910,7 +912,7 @@ generate_template(const Symbol *s)
     fprintf(f,
 	    "\n"
 	    "int\n"
-	    "copy_%s(const %s *from, %s *to)\n"
+	    "copy_%s_SAMBA4(const %s *from, %s *to)\n"
 	    "{\n"
 	    "    return _asn1_copy_top(asn1_%s, from, to);\n"
 	    "}\n"
